from flask import Flask, jsonify, request
import requests  # for using API
import xml.etree.ElementTree as ET  # for parsing XML
import numpy as np  # for using pandas
import pandas as pd  # for using dataframes
import xml.etree.ElementTree as ET

#model =
#model.load_model()

app = Flask(__name__, static_folder='projects')
#r_url=

@app.route('/start-gen/<uuid>')
def start(uuid):
  try:
tree = ET.parse('/content/example.xml')
root = tree.getroot()
a=[]
h=0
cor = np.array([])
# все данные
print('Expertise Data:')

for elem in root.findall('coordinates'):
   for subelem in elem:
      a.append(subelem.text.split(', '))
for i in range(len(a)):
  for j in range(2):
    cor = np.append(cor, float(a[i][j]))
print(cor)
for elem in root.findall('height'):
    h=elem.text
    return jsonify(success=True), cor, h # генерация началась
  except Exception as e:
		raise e


@app.route('/get-status/<uuid>')
def get_status(uuid):
    preds = model.predict_proba(par_df)
    if preds.empty and r.status_code==200:
        #return jsonify(state='process') # идёт генерация
    if not(preds.empty) and r.status_code==200:
    def upload_file():
    source = 'inputs/whole_imgs/'
    destination = 'inputs/saved/'
    out = 'results/restored_imgs'
    for f in os.listdir(source):
        os.remove(os.path.join(source, f))
    for f in os.listdir(destination):
        os.remove(os.path.join(destination, f))
    for f in os.listdir(out):
        os.remove(os.path.join(out, f))
    # Get the file upload
    if request.method == 'POST':
        # check if the post request has the file part
        if 'file' not in request.files:
            print('No file part')
            return redirect(request.url)
        file = request.files['file']
        # If the user does not select a file, the browser submits an
        # empty file without a filename.
        if file.filename == '':
            print('No selected file')
            return redirect(request.url)
        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            return redirect(url_for('main', name=filename))
      return jsonify(state='ready') # генерация завершена, модель сохранена в /projects/<uuid>/result.stl
    else:
      #return jsonify(state='error', message='Описание ошибки') # произошла ошибка


if __name__ == '__main__':
    app.run(debug=True, host="0.0.0.0", port=8989)
